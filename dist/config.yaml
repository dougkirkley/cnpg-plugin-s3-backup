project_name: cnpg-plugin-s3-backup
release:
  gitlab:
    owner: ionic/infra
    name: cnpg-plugin-s3-backup
  disable: "false"
  name_template: '{{.Tag}}'
builds:
  - id: cnpg-plugin-s3-backup
    goos:
      - linux
    goarch:
      - amd64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - linux_amd64_v1
    dir: .
    main: ./cmd/s3-backup
    binary: cnpg-plugin-s3-backup
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -w -s -extldflags='-static'
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
      - GOPRIVATE=gitlab.eitccorp.com/*
archives:
  - id: cnpg-plugin-s3-backup
    name_template: '{{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}'
    format: tar.gz
    files:
      - src: license*
      - src: LICENSE*
      - src: readme*
      - src: README*
      - src: changelog*
      - src: CHANGELOG*
snapshot:
  name_template: '{{ .Version }}-{{ .ShortCommit }}'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
  - id: cnpg-plugin-s3-backup
    ids:
      - cnpg-plugin-s3-backup
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - 664358975573.dkr.ecr.us-gov-west-1.amazonaws.com/ionic/cnpg-plugin-s3-backup:latest
      - 664358975573.dkr.ecr.us-gov-west-1.amazonaws.com/ionic/cnpg-plugin-s3-backup:{{ .Tag }}
      - registry.eitccorp.com/ionic/infra/cnpg-plugin-s3-backup:latest
      - registry.eitccorp.com/ionic/infra/cnpg-plugin-s3-backup:{{ .Tag }}
    build_flag_templates:
      - --pull
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --platform=linux/amd64
    use: docker
publishers:
  - name: nexus
    dir: '{{ dir .ArtifactPath }}'
    cmd: |-
      curl -k -u "{{ .Env.DEPLOY_USER }}:{{ .Env.DEPLOY_TOKEN }}"
        -X POST
        -H "Accept: application/json"
        -H "Content-Type: multipart/form-data"
        "https://nexus.eitccorp.com/service/rest/v1/components?repository=ionic-releases"
        -F "maven2.groupId=ionic"
        -F "maven2.artifactId={{ tolower .ProjectName }}"
        -F "maven2.version={{ .Version }}"
        -F "maven2.asset1=@{{ .ArtifactName }}"
        -F "maven2.asset1.extension=tar.gz"
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - Merge pull request
      - Merge branch
  sort: asc
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  api: '{{ .Env.CI_API_V4_URL }}'
  download: '{{ .Env.CI_SERVER_URL }}'
  use_package_registry: true
